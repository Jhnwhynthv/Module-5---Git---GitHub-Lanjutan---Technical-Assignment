1.  What is the difference between git reset and git revert. When would you use one over the other?
=>  - Perintah git reset adalah alat yang kompleks dan serbaguna untuk membatalkan perubahan. 
      Ini memiliki tiga bentuk utama. Bentuk-bentuk ini sesuai dengan argumen baris perintah --soft, --mixed, 
      --hard. Tiga argumen masing-masing sesuai dengan tiga mekanisme manajemen status internal Git, 
      The Commit Tree (HEAD), The Staging Index, dan The Working Directory.

    - Perintah git revert dapat dianggap sebagai perintah tipe 'undo', namun, ini bukan operasi undo tradisional. 
      Alih-alih menghapus komit dari riwayat proyek, itu mencari cara untuk membalikkan perubahan yang diperkenalkan 
      oleh komit dan menambahkan komit baru dengan konten terbalik yang dihasilkan. Ini mencegah Git kehilangan riwayat, 
      yang penting untuk integritas riwayat revisi kita dan untuk kolaborasi yang andal.

2.  What is the difference between git merge and git rebase. When would you use one over the other?
=>  - Git merge adalah perintah yang memungkinkan kita untuk menggabungkan cabang dari Git.
      Penggabungan adalah praktik umum bagi pengembang. Apakah cabang dibuat untuk pengujian, perbaikan bug, atau alasan lain, 
      penggabungan melakukan perubahan ke cabang lain. Dibutuhkan konten dari cabang sumber dan mengintegrasikannya dengan cabang target.
      Saat menggunakan Git merge, hanya cabang target yang diubah. Sejarah cabang sumber tetap ada. Pendukungnya menyukainya karena melestarikan sejarah cabang.

    - Git rebase adalah perintah yang memungkinkan pengembang untuk mengintegrasikan perubahan dari satu cabang ke cabang lainnya.
      Git rebase mengompres semua perubahan menjadi satu "patch". Kemudian mengintegrasikan patch ke cabang target. Tidak seperti penggabungan, 
      rebasing meratakan sejarah. Ini mentransfer pekerjaan yang telah selesai dari satu cabang ke cabang lainnya. Dalam prosesnya, sejarah yang tidak diinginkan 
      dihilangkan. Ini sangat mudah karena menyederhanakan proses peninjauan.

3.  What is the difference between git stash pop and git stash apply. When would you use one over the other?
=>  - git stash pop membuang simpanan (paling atas, secara default) setelah menerapkannya.
    - git stash apply menyimpannya di daftar simpanan untuk kemungkinan nanti digunakan kembali (atau kita dapat melakukannya kemudian git stash drop).

    git stash pop menerapkan elemen simpanan teratas dan menghapusnya dari tumpukan sedangkan git stash apply melakukan hal yang sama, tetapi meninggalkannya di tumpukan simpanan.

4.  What kinds of things can you do in interactive mode when rebasing?
=>  Rebasing sering digunakan sebagai alternatif penggabungan. Rebasing cabang memperbarui satu cabang dengan yang lain dengan menerapkan komit dari satu cabang di atas komit dari cabang lain. 
    Misalnya, jika bekerja pada featurecabang yang kedaluwarsa dengan sebuah devcabang, rebasing featurecabang ke devakan memungkinkan semua komit baru devuntuk disertakan feature.
